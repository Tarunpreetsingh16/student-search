{"version":3,"sources":["axiosSetup.js","api/students.js","components/CustomTextInput/CustomTextInput.js","components/ProfilePicture/ProfilePicture.js","components/Toggler/Toggler.js","components/StudentInfo/StudentInfo.js","components/StudentInfo/StudentInfo.utility.js","containers/StudentPage/StudentPage.utility.js","components/Tag/Tag.js","components/TagInputDisplay/TagInputDisplay.js","containers/StudentPage/StudentsPage.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","getStudents","a","get","response","data","CustomTextInput","onInputChange","onEnterPress","placeholder","type","className","onChange","event","target","value","onKeyPress","key","handleOnPress","ProfilePicture","source","alt","src","Toggler","visible","onToggle","onClick","StudentInfo","grades","studentInfo","useState","areGradesVisible","setAreGradesVisible","gradesSection","map","grade","index","sudentInfoContent","firstName","lastName","email","company","skill","reduce","b","Number","length","pic","filterByName","students","nameSearchQuery","filter","student","toLowerCase","indexOf","filterByTag","tagSearchQuery","undefined","tags","doesTagExist","some","tag","Tag","text","TagInputDisplay","tagsToDisplay","propsForTextInput","StudentsPage","setStudents","name","filters","setFilters","filteredStudents","setFilteredStudents","useEffect","responseData","getStudentsData","filterStudents","addTagToStudent","id","studentsCopy","push","searchQuery","trim","updateStudentStateWithTag","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.43cdb267.chunk.js","sourcesContent":["/**\r\n * @file contains axios setup to reduce redundancy\r\n*/\r\n\r\nimport axios from 'axios';\r\n\r\nexport const instance = axios.create({\r\n\tbaseURL: 'https://api.hatchways.io/',\r\n});","/**\r\n* @file contains API calls related to students\r\n*/\r\n\r\nimport {instance} from \"../axiosSetup\";\r\n\r\n/**\r\n * @function\r\n * @description used to fetch data about all the students\r\n * @returns {Array} students data\r\n */\r\nexport const getStudents = async () => {\r\n    try {\r\n        const response = await instance.get(\r\n            'https://api.hatchways.io/assessment/students',\r\n        );\r\n        return response.data;\r\n    } catch(error) {\r\n        throw error;\r\n    }\r\n};\r\n","import React from 'react';\r\nimport './CustomTextInput.style.css';\r\n\r\nconst CustomTextInput = ({onInputChange, onEnterPress, placeholder}) => {\r\n\r\n\tconst handleOnPress = (event) => {\r\n\t\tif (event.key === 'Enter') {\r\n\t\t\tonEnterPress(event.target.value)\r\n\t\t\tevent.target.value = '';\r\n\t\t};\r\n\t};\r\n\r\n\treturn (\r\n        <input\r\n\t\t\ttype='text'\r\n\t\t\tplaceholder={placeholder}\r\n\t\t\tclassName='inputField'\r\n\t\t\tonChange={(event) => onInputChange ? onInputChange(event.target.value) : null}\r\n\t\t\tonKeyPress={(event) => handleOnPress(event)}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default CustomTextInput;\r\n","import React from 'react';\r\nimport './ProfilePicture.style.css';\r\n\r\nconst ProfilePicture = ({source, alt}) => {\r\n    return (\r\n        <div className='pictureContainer'>\r\n            <img src={source} alt={alt} className='picture' />\r\n        </div>\r\n    );\r\n};\r\nexport default ProfilePicture;\r\n","import React from 'react';\r\nimport './Toggler.style.css';\r\n\r\nconst Toggler = ({visible, onToggle}) => {\r\n    return (\r\n        <button className={\r\n\t\t\t`testGradesTogglerButton\r\n\t\t\t${visible\r\n\t\t\t\t? 'minusBackground'\r\n\t\t\t\t: 'plusBackground'}` \r\n\t\t\t}\r\n\t\t\tonClick={onToggle}\r\n\t\t/>\r\n    );\r\n};\r\n\r\nexport default Toggler;\r\n","import React, {useState} from 'react';\r\nimport './StudentInfo.style.css';\r\nimport {calculateAverageGrade} from './StudentInfo.utility.js';\r\nimport ProfilePicture from './../ProfilePicture/ProfilePicture.js';\r\nimport Toggler from './../Toggler/Toggler.js';\r\n\r\nconst StudentInfo = ({studentInfo}) => {\r\n\tconst [areGradesVisible, setAreGradesVisible] = useState(false);\r\n\r\n\tconst gradesSection = (\r\n\t\tstudentInfo.grades.map((grade, index) => (\r\n\t\t\t<h4 key={index}>\r\n\t\t\t\tTest{index + 1}:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{grade}%\r\n\t\t\t</h4>\r\n\t\t))\r\n\t);\r\n\r\n\tconst sudentInfoContent = (\r\n\t\t<div className='studentInfoContainer'>\r\n\t\t\t<h3>{`${studentInfo.firstName} ${studentInfo.lastName}`}</h3>\r\n\t\t\t<div className='studentInfo'>\r\n\t\t\t\t<h4>Email: {studentInfo.email}</h4>\r\n\t\t\t\t<h4>Company: {studentInfo.company}</h4>\r\n\t\t\t\t<h4>Skill: {studentInfo.skill}</h4>\r\n\t\t\t\t<h4>Average: {calculateAverageGrade(studentInfo.grades)}%</h4>\r\n\t\t\t\t<div className=\"gradesContainer\">\r\n\t\t\t\t\t{areGradesVisible \r\n\t\t\t\t\t\t? gradesSection\r\n\t\t\t\t\t\t: null\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n\r\n\treturn (\r\n\t\t<div className='mainContainer'>\r\n\t\t\t<div className='basicStudentInfoContainer'>\r\n\t\t\t\t<ProfilePicture source={studentInfo.pic} alt={'student headshot'} />\r\n\t\t\t\t{sudentInfoContent}\r\n\t\t\t\t<Toggler visible={areGradesVisible} onToggle={() => setAreGradesVisible(!areGradesVisible)} />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default StudentInfo;\r\n","\r\nexport const calculateAverageGrade = (grades) => {\r\n    const totalGrade = grades.reduce((a, b) => Number(a) + Number(b), 0);\r\n    const average = (totalGrade / grades.length);\r\n    return average;\r\n};","export const filterStudents = (students, filters) => {\r\n    let filteredStudents = [...students];\r\n    if (filters.name.length > 0) {\r\n        filteredStudents = filterByName(filteredStudents, filters.name);\r\n    }\r\n    if (filters.tag.length > 0) {\r\n        filteredStudents = filterByTag(filteredStudents, filters.tag);\r\n    }\r\n    return filteredStudents;\r\n};\r\n\r\nconst filterByName = (students, nameSearchQuery) => {\r\n    return students.filter((student) => {\r\n        const fullName = `${student.firstName} ${student.lastName}`;\r\n        return fullName.toLowerCase().indexOf(nameSearchQuery.toLowerCase()) !== -1;\r\n    })\r\n};\r\n\r\nconst filterByTag = (students, tagSearchQuery) => {\r\n    return students.filter((student) => {\r\n        return student.tags !== undefined\r\n    })\r\n    .filter((student) => {\r\n        return doesTagExist(student.tags, tagSearchQuery);\r\n    });\r\n};\r\n\r\nconst doesTagExist = (tags, tagSearchQuery) => {\r\n    return tags.some((tag) => tag.toLowerCase().indexOf(tagSearchQuery.toLowerCase()) !== -1)\r\n};\r\n","import React from 'react';\r\nimport './Tag.style.css';\r\n\r\nconst Tag = ({text}) => {\r\n\treturn (\r\n        <div className='tag'>\r\n            {text}\r\n        </div>\r\n\t);\r\n};\r\n\r\nexport default Tag;\r\n","import React from 'react';\r\nimport './TagInputDisplay.style.css';\r\nimport Tag from './../Tag/Tag.js';\r\nimport CustomTextInput from '../CustomTextInput/CustomTextInput';\r\n\r\nconst TagInputDisplay = ({tagsToDisplay, propsForTextInput}) => {\r\n    return (\r\n        <div className=\"tagInputDisplayContainer\">\r\n            {\r\n                tagsToDisplay && tagsToDisplay.map((tag, index) =>\r\n                    <Tag text={tag} key={index}/> )\r\n            }\r\n            <div className='tagInputContainer'>\r\n                <CustomTextInput\r\n                    placeholder={propsForTextInput.placeholder}\r\n                    onEnterPress={propsForTextInput.onEnterPress}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TagInputDisplay;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {getStudents} from '../../api/students';\r\nimport CustomTextInput from '../../components/CustomTextInput/CustomTextInput';\r\nimport StudentInfo from '../../components/StudentInfo/StudentInfo.js';\r\nimport './StudentsPage.style.css';\r\nimport {filterStudents} from './StudentPage.utility.js';\r\nimport TagInputDisplay from './../../components/TagInputDisplay/TagInputDisplay.js'\r\nconst StudentsPage = () => {\r\n\r\n\tconst [students, setStudents] = useState([]);\r\n\tconst [filters, setFilters] = useState({\r\n\t\tname: '',\r\n\t\ttag: '',\r\n\t});\r\n\tconst [filteredStudents, setFilteredStudents] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst getStudentsData = async () => {\r\n\t\t\tconst responseData = await getStudents();\r\n\t\t\tconst students = responseData.students;\r\n\t\t\tsetStudents(students);\r\n\t\t};\r\n\t\tgetStudentsData();\r\n\t}, []);\r\n\t\r\n\tuseEffect(() => {\r\n\t\tconst filteredStudents = filterStudents(students, filters);\r\n\t\tsetFilteredStudents(filteredStudents);\r\n\t}, [filters, students]);\r\n\r\n\tconst updateStudentStateWithTag = (id, tag) => {\r\n\t\tif (tag && tag.trim().length > 0) {\r\n\t\t\tlet studentsCopy = addTagToStudent(id, tag);\r\n\t\t\tsetStudents(studentsCopy);\r\n\t\t}\r\n\t};\r\n\r\n\tconst addTagToStudent = (id, tag) => {\r\n\t\tlet studentsCopy = [...students];\r\n\t\tstudentsCopy = studentsCopy.map((student) => {\r\n\t\t\tif (student.id === id) {\r\n\t\t\t\tif (!student.tags) {\r\n\t\t\t\t\tstudent.tags = [];\r\n\t\t\t\t};\r\n\t\t\t\tstudent.tags.push(tag);\r\n\t\t\t}\r\n\t\t\treturn student;\r\n\t\t});\r\n\t\treturn studentsCopy;\r\n\t} \r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className='searchBoxContainer'>\r\n\t\t\t\t<CustomTextInput placeholder={'Search by name'} onInputChange={(searchQuery) => setFilters({...filters, name: searchQuery})}/>\r\n\t\t\t</div>\r\n\t\t\t<div className='searchBoxContainer'>\r\n\t\t\t\t<CustomTextInput placeholder={'Search by tag'} onInputChange={(searchQuery) => setFilters({...filters, tag: searchQuery})}/>\r\n\t\t\t</div>\r\n\t\t\t{\r\n\t\t\t\tfilteredStudents.map((student) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div className='studentContainer' key={student.id}>\r\n\t\t\t\t\t\t\t<StudentInfo studentInfo={student}/>\r\n\t\t\t\t\t\t\t<div className='tagInputDisplayContainer'>\r\n\t\t\t\t\t\t\t\t<TagInputDisplay\r\n\t\t\t\t\t\t\t\t\ttagsToDisplay={student.tags}\r\n\t\t\t\t\t\t\t\t\tpropsForTextInput={{\r\n\t\t\t\t\t\t\t\t\t\tplaceholder: 'Add a tag',\r\n\t\t\t\t\t\t\t\t\t\tonEnterPress: (tag) => updateStudentStateWithTag(student.id, tag),\r\n\t\t\t\t\t\t\t\t\t}} \r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t);\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default StudentsPage;\r\n","import StudentsPage from './containers/StudentPage/StudentsPage.js';\n\n/**\n * @return {Component} rendered App component\n */\nfunction App() {\n\treturn (\n\t\t<div>\n\t\t\t<StudentsPage />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}